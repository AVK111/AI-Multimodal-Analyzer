name: Deploy to AWS ECR with Nginx

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}       # Your IAM Access Key ID
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Your IAM Secret Access Key
          aws-region: ap-south-1                                     # Change if your AWS region is different

      # 3️⃣ Log in to ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build, tag, and push Docker image
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-app-repo   # <-- Change to your ECR repo name
          IMAGE_TAG: latest             # <-- Change tag if needed
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 5️⃣ Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}       # Your EC2 public IP or DNS
          username: ubuntu                     # Change if your EC2 uses a different username
          key: ${{ secrets.EC2_SSH_KEY }}     # Your private SSH key
          script: |
            # Update system
            sudo apt-get update -y

            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
            fi

            # Install Nginx
            sudo apt-get install -y nginx
            sudo systemctl enable nginx
            sudo systemctl start nginx

            # Configure Nginx reverse proxy
            echo "server {
                listen 80;
                server_name _;                   # <-- Replace _ with your domain if any
                location / {
                    proxy_pass http://127.0.0.1:5000;   # <-- Change port if app runs on a different port
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }" | sudo tee /etc/nginx/sites-available/app

            sudo ln -sf /etc/nginx/sites-available/app /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx

            # Log in to ECR from EC2
            aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

            # Pull latest Docker image
            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/my-app-repo:latest

            # Stop old container if running
            sudo docker stop my-app || true
            sudo docker rm my-app || true

            # Run new container
            sudo docker run -d --name my-app -p 5000:5000 ${{ steps.login-ecr.outputs.registry }}/my-app-repo:latest
